
homework: ~0.3ms for a (5 by 129) matrix

Real project:
0.85 ms for everything (5 by 2048)  matrix
5 by 2048 matrix
maybe 8 bits or 16 bits. can test with 32 bits



oct 2?:
with just blas, it takes ~0.5 ms. Still no improvement with other compiler flags
switching to 5 by 2048 : ~1.12 ms, compiler flags change nothing
weirdly it only works when doing many samples. (doing it one time will yield ~2ms)

oct 29:
ne10 library:
built from a fork to do 'make install' to install automatically
to include the library: include ne10/NE10.h
ne10 types can be accessed like regular structs (vector4f.x = 5)

using ne10 c function for 2560 vector dot product: 0.05 ms
with ne10 neon function : 0.025 ms

Real part of covariance matrix done:
0.1716 ms for a 5 by 2048 matrix
Still need to compute the imaginary part, can expect ~2x increase

Nov 22:
The code can compile in C++ while using C libraries!
Also, the compiler flags are extremely important. 
Normal compilation of NEON_sample_cov_martix.c : 0.77 ms
With the flag -O3: 0.3 ms! (what im using since the beginning anyway)
With -Ofast : Also 0.3 ms
Other flags make no improvements: pgo, lto, ftree-vectorize, funroll-loops, march-native, ffast-math
